<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>科学计算 - 标签 - 暮瞻</title>
        <link>https://blog.ralvines.top/tags/%E7%A7%91%E5%AD%A6%E8%AE%A1%E7%AE%97/</link>
        <description>科学计算 - 标签 - 暮瞻</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Wed, 01 Mar 2023 13:20:40 &#43;0800</lastBuildDate><atom:link href="https://blog.ralvines.top/tags/%E7%A7%91%E5%AD%A6%E8%AE%A1%E7%AE%97/" rel="self" type="application/rss+xml" /><item>
    <title>Matlab 曲线拟合工具箱 SRTP</title>
    <link>https://blog.ralvines.top/srtp/</link>
    <pubDate>Wed, 01 Mar 2023 13:20:40 &#43;0800</pubDate><author>
                        <name>Ralvine</name><uri>https://blog.ralvines.top/about/praise/</uri><email>ralvine@163.com</email></author><guid>https://blog.ralvines.top/srtp/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="https://z1.ax1x.com/2023/10/23/piADxe0.png" referrerpolicy="no-referrer">
            </div><h2 id="开发日志" class="headerLink">
    <a href="#%e5%bc%80%e5%8f%91%e6%97%a5%e5%bf%97" class="header-mark"></a>开发日志</h2><h3 id="2023526" class="headerLink">
    <a href="#2023526" class="header-mark"></a>2023.5.26</h3><ul>
<li>在函数说明文档中提供了<code>spapi</code>的部分具体实现方式</li>
</ul>
<h3 id="2023523" class="headerLink">
    <a href="#2023523" class="header-mark"></a>2023.5.23</h3><ul>
<li>对部分函数进行了单增排列和参数检查上的功能优化</li>
</ul>
<h3 id="2023518-会议记录" class="headerLink">
    <a href="#2023518-%e4%bc%9a%e8%ae%ae%e8%ae%b0%e5%bd%95" class="header-mark"></a>2023.5.18 会议记录</h3><ul>
<li>
<p><code>ba_obj</code> 中存放一个 <code>void *</code> 类型的指针，这种类型的指针可以被转化为任意类型的指针，用来指向其保存的数据的内存位置</p>
<ul>
<li>在构造 <code>ba_obj</code> 对象的时候传给其构造函数的指针尽量指向堆内存</li>
<li>若要指向栈内存，对象的生命周期需要开发者自行维护。</li>
<li>注：若使用栈内存构造一个 <code>ba_obj</code> 对象，在离开当前作用域之后该 <code>ba_obj</code> 对象仍被使用，则其内部指针指向的数据其实已经被释放，此时很可能会引发软件闪退问题</li>
</ul>
</li>
<li>
<p><code>ba_obj</code> 的设计初衷是用来保存和传递矩阵的，不要对 <code>ba_obj</code> 对象写下 <code>get&lt; int / double &gt;()</code></p>
</li>
<li>
<p><code>ba_obj</code> 的构造函数的参数中的指针参数也应该指向堆内存</p>
</li>
<li>
<p><code>ba_obj</code> 不需要指针参数的构造函数内部也是重新 <code>new</code> 了堆内存赋值给其保存的指针的</p>
</li>
<li>
<p>软件中的 <code>int,double</code> 被视为 $1 \times 1$ 的 <code>int,double</code> 矩阵，不存在C++中独立的 <code>int,double</code></p>
</li>
<li>
<p><code>baltam::structure</code> 中保存一个 <code>std::map&lt;std::string, ba_obj_ptr&gt;</code> 作为存储数据的数据结构</p>
<ul>
<li>其 <code>map</code> 的 <code>value</code> 是指向 <code>ba_obj</code> 的智能指针</li>
<li>在给 <code>baltam::structure</code> 使用 <code>set_field(key,value_ptr)</code> 函数添加字段 <code>key</code> 的时候，数据指针<code>value_ptr</code> 应指向堆内存</li>
</ul>
</li>
<li>
<p>测试脚本的两个目的</p>
<ul>
<li>给不熟悉相关理论的用户一个快速上手的示例</li>
<li>测试函数的功能</li>
</ul>
</li>
<li>
<p>对于错误输入的处理并不一定要与MATLAB相同，可以更多的考虑相关理论的背景，报错与否一个重要的考量是用户友好</p>
</li>
</ul>
<h3 id="2023516" class="headerLink">
    <a href="#2023516" class="header-mark"></a>2023.5.16</h3><ul>
<li>改写并优化了<code>fnval</code>和<code>fnder</code>的测试脚本</li>
</ul>
<h3 id="2023513" class="headerLink">
    <a href="#2023513" class="header-mark"></a>2023.5.13</h3><ul>
<li>新增<code>spapi</code>函数说明</li>
</ul>
<h3 id="202359" class="headerLink">
    <a href="#202359" class="header-mark"></a>2023.5.9</h3><ul>
<li>新增测试 <code>test_fnval.m</code> 和 <code>test_fnder.m</code></li>
</ul>
<h3 id="2023424" class="headerLink">
    <a href="#2023424" class="header-mark"></a>2023.4.24</h3><ul>
<li>优化了函数说明文档，统一了表达方式和字体样式</li>
<li>更正了<code>fnder</code>和<code>ppmak</code>文档中的错误表述</li>
</ul>
<h3 id="2023412-会议记录" class="headerLink">
    <a href="#2023412-%e4%bc%9a%e8%ae%ae%e8%ae%b0%e5%bd%95" class="header-mark"></a>2023.4.12 会议记录</h3><ul>
<li>介绍开发环境与插件的机制及开发规范，具体可见
<a href="http://183.66.214.98:20005/numerical_computation/style_guide/-/wikis/C&#43;&#43;-%E5%BC%80%E5%8F%91%E8%A7%84%E8%8C%83" target="_blank" rel="noopener noreferrer">C++ 开发规范</a>
<a href="https://www.bilibili.com/video/BV1SW4y1j71Y/?spm_id_from=333.999.0.0&amp;vd_source=ee756967a7f488a76fc48a6117203f55" target="_blank" rel="noopener noreferrer">mac操作系统使用安装北太天元</a></li>
<li>内核的使用文档，具体可见 <code>spline/deps/core/share/doc/html</code></li>
<li>报bug的方式：在gitlab中的议题中报</li>
<li>介绍源码的调试方法，文档可见
<a href="http://183.66.214.98:20005/numerical_computation/style_guide/-/wikis/CLion%E8%B0%83%E8%AF%95baltam%E4%BE%9D%E8%B5%96%E7%9A%84%E5%8A%A8%E6%80%81%E5%BA%93" target="_blank" rel="noopener noreferrer">CLion调试baltam依赖的动态库</a></li>
<li>讲解test测试脚本的书写和保留及函数说明文档的书写</li>
</ul>
<h3 id="202349" class="headerLink">
    <a href="#202349" class="header-mark"></a>2023.4.9</h3><ul>
<li>在<code>.gitignore</code>新增了对部分开发环境下冗余文件的忽略</li>
</ul>
<h3 id="202347" class="headerLink">
    <a href="#202347" class="header-mark"></a>2023.4.7</h3><ul>
<li>新增 <code>fn2fm</code> 函数功能 <code>ns = fn2fm(s,form)</code>的使用文档</li>
<li>新增 <code>fnder</code> 函数功能 <code>ds = fnder(s,order)</code>的使用文档</li>
</ul>]]></description>
</item></channel>
</rss>
